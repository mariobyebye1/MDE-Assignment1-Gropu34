/*
 * generated by Xtext 2.25.0
 */
grammar InternalNlToSql;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.inf.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.services.NlToSqlGrammarAccess;

}
@parser::members {
	private NlToSqlGrammarAccess grammarAccess;

	public void setGrammarAccess(NlToSqlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAccountingSpeech
entryRuleAccountingSpeech
:
{ before(grammarAccess.getAccountingSpeechRule()); }
	 ruleAccountingSpeech
{ after(grammarAccess.getAccountingSpeechRule()); } 
	 EOF 
;

// Rule AccountingSpeech
ruleAccountingSpeech 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAccountingSpeechAccess().getStatementsAssignment()); }
		(rule__AccountingSpeech__StatementsAssignment)*
		{ after(grammarAccess.getAccountingSpeechAccess().getStatementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectStatement
entryRuleSelectStatement
:
{ before(grammarAccess.getSelectStatementRule()); }
	 ruleSelectStatement
{ after(grammarAccess.getSelectStatementRule()); } 
	 EOF 
;

// Rule SelectStatement
ruleSelectStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectStatementAccess().getGroup()); }
		(rule__SelectStatement__Group__0)
		{ after(grammarAccess.getSelectStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsertStatement
entryRuleInsertStatement
:
{ before(grammarAccess.getInsertStatementRule()); }
	 ruleInsertStatement
{ after(grammarAccess.getInsertStatementRule()); } 
	 EOF 
;

// Rule InsertStatement
ruleInsertStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertStatementAccess().getGroup()); }
		(rule__InsertStatement__Group__0)
		{ after(grammarAccess.getInsertStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateStatement
entryRuleUpdateStatement
:
{ before(grammarAccess.getUpdateStatementRule()); }
	 ruleUpdateStatement
{ after(grammarAccess.getUpdateStatementRule()); } 
	 EOF 
;

// Rule UpdateStatement
ruleUpdateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getGroup()); }
		(rule__UpdateStatement__Group__0)
		{ after(grammarAccess.getUpdateStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteStatement
entryRuleDeleteStatement
:
{ before(grammarAccess.getDeleteStatementRule()); }
	 ruleDeleteStatement
{ after(grammarAccess.getDeleteStatementRule()); } 
	 EOF 
;

// Rule DeleteStatement
ruleDeleteStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getGroup()); }
		(rule__DeleteStatement__Group__0)
		{ after(grammarAccess.getDeleteStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectList
entryRuleSelectList
:
{ before(grammarAccess.getSelectListRule()); }
	 ruleSelectList
{ after(grammarAccess.getSelectListRule()); } 
	 EOF 
;

// Rule SelectList
ruleSelectList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectListAccess().getGroup()); }
		(rule__SelectList__Group__0)
		{ after(grammarAccess.getSelectListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyReference
entryRulePropertyReference
:
{ before(grammarAccess.getPropertyReferenceRule()); }
	 rulePropertyReference
{ after(grammarAccess.getPropertyReferenceRule()); } 
	 EOF 
;

// Rule PropertyReference
rulePropertyReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getGroup()); }
		(rule__PropertyReference__Group__0)
		{ after(grammarAccess.getPropertyReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityName
entryRuleEntityName
:
{ before(grammarAccess.getEntityNameRule()); }
	 ruleEntityName
{ after(grammarAccess.getEntityNameRule()); } 
	 EOF 
;

// Rule EntityName
ruleEntityName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityNameAccess().getGroup()); }
		(rule__EntityName__Group__0)
		{ after(grammarAccess.getEntityNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyName
entryRulePropertyName
:
{ before(grammarAccess.getPropertyNameRule()); }
	 rulePropertyName
{ after(grammarAccess.getPropertyNameRule()); } 
	 EOF 
;

// Rule PropertyName
rulePropertyName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyNameAccess().getGroup()); }
		(rule__PropertyName__Group__0)
		{ after(grammarAccess.getPropertyNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateItem
entryRuleUpdateItem
:
{ before(grammarAccess.getUpdateItemRule()); }
	 ruleUpdateItem
{ after(grammarAccess.getUpdateItemRule()); } 
	 EOF 
;

// Rule UpdateItem
ruleUpdateItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateItemAccess().getGroup()); }
		(rule__UpdateItem__Group__0)
		{ after(grammarAccess.getUpdateItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicOperator
entryRuleLogicOperator
:
{ before(grammarAccess.getLogicOperatorRule()); }
	 ruleLogicOperator
{ after(grammarAccess.getLogicOperatorRule()); } 
	 EOF 
;

// Rule LogicOperator
ruleLogicOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicOperatorAccess().getAlternatives()); }
		(rule__LogicOperator__Alternatives)
		{ after(grammarAccess.getLogicOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonOperator
entryRuleComparisonOperator
:
{ before(grammarAccess.getComparisonOperatorRule()); }
	 ruleComparisonOperator
{ after(grammarAccess.getComparisonOperatorRule()); } 
	 EOF 
;

// Rule ComparisonOperator
ruleComparisonOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
		(rule__ComparisonOperator__Alternatives)
		{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSelectStatementParserRuleCall_0_0()); }
		ruleSelectStatement
		{ after(grammarAccess.getStatementAccess().getSelectStatementParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getInsertStatementParserRuleCall_0_1()); }
		ruleInsertStatement
		{ after(grammarAccess.getStatementAccess().getInsertStatementParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getUpdateStatementParserRuleCall_0_2()); }
		ruleUpdateStatement
		{ after(grammarAccess.getStatementAccess().getUpdateStatementParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_0_3()); }
		ruleDeleteStatement
		{ after(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getSelectListParserRuleCall_2_0_0()); }
		ruleSelectList
		{ after(grammarAccess.getSelectStatementAccess().getSelectListParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectStatementAccess().getAllKeyword_2_0_1()); }
		'all'
		{ after(grammarAccess.getSelectStatementAccess().getAllKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectListAccess().getTheKeyword_0_0()); }
		'the'
		{ after(grammarAccess.getSelectListAccess().getTheKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectListAccess().getAKeyword_0_1()); }
		'a'
		{ after(grammarAccess.getSelectListAccess().getAKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getTheKeyword_0_0()); }
		'the'
		{ after(grammarAccess.getPropertyReferenceAccess().getTheKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getAKeyword_0_1()); }
		'a'
		{ after(grammarAccess.getPropertyReferenceAccess().getAKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityName__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityNameAccess().getTheKeyword_0_0()); }
		'the'
		{ after(grammarAccess.getEntityNameAccess().getTheKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityNameAccess().getAKeyword_0_1()); }
		'a'
		{ after(grammarAccess.getEntityNameAccess().getAKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyNameAccess().getTheKeyword_0_0()); }
		'the'
		{ after(grammarAccess.getPropertyNameAccess().getTheKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyNameAccess().getAKeyword_0_1()); }
		'a'
		{ after(grammarAccess.getPropertyNameAccess().getAKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateItemAccess().getTheKeyword_0_0()); }
		'the'
		{ after(grammarAccess.getUpdateItemAccess().getTheKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateItemAccess().getAKeyword_0_1()); }
		'a'
		{ after(grammarAccess.getUpdateItemAccess().getAKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getTheKeyword_0_0()); }
		'the'
		{ after(grammarAccess.getComparisonAccess().getTheKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getAKeyword_0_1()); }
		'a'
		{ after(grammarAccess.getComparisonAccess().getAKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicOperatorAccess().getAndKeyword_0()); }
		'and'
		{ after(grammarAccess.getLogicOperatorAccess().getAndKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicOperatorAccess().getOrKeyword_1()); }
		'or'
		{ after(grammarAccess.getLogicOperatorAccess().getOrKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getComparisonOperatorAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGroup_1()); }
		(rule__ComparisonOperator__Group_1__0)
		{ after(grammarAccess.getComparisonOperatorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGroup_2()); }
		(rule__ComparisonOperator__Group_2__0)
		{ after(grammarAccess.getComparisonOperatorAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGroup_3()); }
		(rule__ComparisonOperator__Group_3__0)
		{ after(grammarAccess.getComparisonOperatorAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGroup_4()); }
		(rule__ComparisonOperator__Group_4__0)
		{ after(grammarAccess.getComparisonOperatorAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGroup_5()); }
		(rule__ComparisonOperator__Group_5__0)
		{ after(grammarAccess.getComparisonOperatorAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGroup_6()); }
		(rule__ComparisonOperator__Group_6__0)
		{ after(grammarAccess.getComparisonOperatorAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_0()); }
	(rule__Statement__Alternatives_0)
	{ after(grammarAccess.getStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getStatementAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__0__Impl
	rule__SelectStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_0()); }
	(rule__SelectStatement__Group_0__0)?
	{ after(grammarAccess.getSelectStatementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__1__Impl
	rule__SelectStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getShowKeyword_1()); }
	'show'
	{ after(grammarAccess.getSelectStatementAccess().getShowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__2__Impl
	rule__SelectStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_2()); }
	(rule__SelectStatement__Group_2__0)
	{ after(grammarAccess.getSelectStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__3__Impl
	rule__SelectStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getEntityAssignment_3()); }
	(rule__SelectStatement__EntityAssignment_3)
	{ after(grammarAccess.getSelectStatementAccess().getEntityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__4__Impl
	rule__SelectStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_4()); }
	(rule__SelectStatement__Group_4__0)?
	{ after(grammarAccess.getSelectStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_5()); }
	(rule__SelectStatement__Group_5__0)?
	{ after(grammarAccess.getSelectStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_0__0__Impl
	rule__SelectStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getCanKeyword_0_0()); }
	'can'
	{ after(grammarAccess.getSelectStatementAccess().getCanKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_0__1__Impl
	rule__SelectStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getYouKeyword_0_1()); }
	'you'
	{ after(grammarAccess.getSelectStatementAccess().getYouKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getPleaseKeyword_0_2()); }
	'please'
	{ after(grammarAccess.getSelectStatementAccess().getPleaseKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_2__0__Impl
	rule__SelectStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getAlternatives_2_0()); }
	(rule__SelectStatement__Alternatives_2_0)
	{ after(grammarAccess.getSelectStatementAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getFromKeyword_2_1()); }
	'from'
	{ after(grammarAccess.getSelectStatementAccess().getFromKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_4__0__Impl
	rule__SelectStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getWhereKeyword_4_0()); }
	'where'
	{ after(grammarAccess.getSelectStatementAccess().getWhereKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getConditionAssignment_4_1()); }
	(rule__SelectStatement__ConditionAssignment_4_1)
	{ after(grammarAccess.getSelectStatementAccess().getConditionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_5__0__Impl
	rule__SelectStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroupKeyword_5_0()); }
	'group'
	{ after(grammarAccess.getSelectStatementAccess().getGroupKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_5__1__Impl
	rule__SelectStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getByKeyword_5_1()); }
	'by'
	{ after(grammarAccess.getSelectStatementAccess().getByKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_5__2__Impl
	rule__SelectStatement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroupByListAssignment_5_2()); }
	(rule__SelectStatement__GroupByListAssignment_5_2)
	{ after(grammarAccess.getSelectStatementAccess().getGroupByListAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_5_3()); }
	(rule__SelectStatement__Group_5_3__0)*
	{ after(grammarAccess.getSelectStatementAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_5_3__0__Impl
	rule__SelectStatement__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getSelectStatementAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroupByListAssignment_5_3_1()); }
	(rule__SelectStatement__GroupByListAssignment_5_3_1)
	{ after(grammarAccess.getSelectStatementAccess().getGroupByListAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__0__Impl
	rule__InsertStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getGroup_0()); }
	(rule__InsertStatement__Group_0__0)?
	{ after(grammarAccess.getInsertStatementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__1__Impl
	rule__InsertStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getInsertKeyword_1()); }
	'insert'
	{ after(grammarAccess.getInsertStatementAccess().getInsertKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__2__Impl
	rule__InsertStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getIntoKeyword_2()); }
	'into'
	{ after(grammarAccess.getInsertStatementAccess().getIntoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__3__Impl
	rule__InsertStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getEntityAssignment_3()); }
	(rule__InsertStatement__EntityAssignment_3)
	{ after(grammarAccess.getInsertStatementAccess().getEntityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__4__Impl
	rule__InsertStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__5__Impl
	rule__InsertStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getPropertyListAssignment_5()); }
	(rule__InsertStatement__PropertyListAssignment_5)
	{ after(grammarAccess.getInsertStatementAccess().getPropertyListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__6__Impl
	rule__InsertStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getGroup_6()); }
	(rule__InsertStatement__Group_6__0)*
	{ after(grammarAccess.getInsertStatementAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__7__Impl
	rule__InsertStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__8__Impl
	rule__InsertStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getValuesKeyword_8()); }
	'values'
	{ after(grammarAccess.getInsertStatementAccess().getValuesKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__9__Impl
	rule__InsertStatement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_9()); }
	'('
	{ after(grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__10__Impl
	rule__InsertStatement__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getValueListAssignment_10()); }
	(rule__InsertStatement__ValueListAssignment_10)
	{ after(grammarAccess.getInsertStatementAccess().getValueListAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__11__Impl
	rule__InsertStatement__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getGroup_11()); }
	(rule__InsertStatement__Group_11__0)*
	{ after(grammarAccess.getInsertStatementAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_12()); }
	')'
	{ after(grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_0__0__Impl
	rule__InsertStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getCanKeyword_0_0()); }
	'can'
	{ after(grammarAccess.getInsertStatementAccess().getCanKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_0__1__Impl
	rule__InsertStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getYouKeyword_0_1()); }
	'you'
	{ after(grammarAccess.getInsertStatementAccess().getYouKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getPleaseKeyword_0_2()); }
	'please'
	{ after(grammarAccess.getInsertStatementAccess().getPleaseKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_6__0__Impl
	rule__InsertStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getInsertStatementAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getPropertyListAssignment_6_1()); }
	(rule__InsertStatement__PropertyListAssignment_6_1)
	{ after(grammarAccess.getInsertStatementAccess().getPropertyListAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_11__0__Impl
	rule__InsertStatement__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getCommaKeyword_11_0()); }
	','
	{ after(grammarAccess.getInsertStatementAccess().getCommaKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getValueListAssignment_11_1()); }
	(rule__InsertStatement__ValueListAssignment_11_1)
	{ after(grammarAccess.getInsertStatementAccess().getValueListAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__0__Impl
	rule__UpdateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getGroup_0()); }
	(rule__UpdateStatement__Group_0__0)?
	{ after(grammarAccess.getUpdateStatementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__1__Impl
	rule__UpdateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_1()); }
	'update'
	{ after(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__2__Impl
	rule__UpdateStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getEntityAssignment_2()); }
	(rule__UpdateStatement__EntityAssignment_2)
	{ after(grammarAccess.getUpdateStatementAccess().getEntityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__3__Impl
	rule__UpdateStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getSetKeyword_3()); }
	'set'
	{ after(grammarAccess.getUpdateStatementAccess().getSetKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__4__Impl
	rule__UpdateStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getGroup_4()); }
	(rule__UpdateStatement__Group_4__0)
	{ after(grammarAccess.getUpdateStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getGroup_5()); }
	(rule__UpdateStatement__Group_5__0)?
	{ after(grammarAccess.getUpdateStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_0__0__Impl
	rule__UpdateStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getCanKeyword_0_0()); }
	'can'
	{ after(grammarAccess.getUpdateStatementAccess().getCanKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_0__1__Impl
	rule__UpdateStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getYouKeyword_0_1()); }
	'you'
	{ after(grammarAccess.getUpdateStatementAccess().getYouKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getPleaseKeyword_0_2()); }
	'please'
	{ after(grammarAccess.getUpdateStatementAccess().getPleaseKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_4__0__Impl
	rule__UpdateStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getUpdateItemAssignment_4_0()); }
	(rule__UpdateStatement__UpdateItemAssignment_4_0)
	{ after(grammarAccess.getUpdateStatementAccess().getUpdateItemAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getGroup_4_1()); }
	(rule__UpdateStatement__Group_4_1__0)*
	{ after(grammarAccess.getUpdateStatementAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_4_1__0__Impl
	rule__UpdateStatement__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getUpdateStatementAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getUpdateItemAssignment_4_1_1()); }
	(rule__UpdateStatement__UpdateItemAssignment_4_1_1)
	{ after(grammarAccess.getUpdateStatementAccess().getUpdateItemAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_5__0__Impl
	rule__UpdateStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getWhereKeyword_5_0()); }
	'where'
	{ after(grammarAccess.getUpdateStatementAccess().getWhereKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getConditionAssignment_5_1()); }
	(rule__UpdateStatement__ConditionAssignment_5_1)
	{ after(grammarAccess.getUpdateStatementAccess().getConditionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__0__Impl
	rule__DeleteStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getGroup_0()); }
	(rule__DeleteStatement__Group_0__0)?
	{ after(grammarAccess.getDeleteStatementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__1__Impl
	rule__DeleteStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_1()); }
	'delete'
	{ after(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__2__Impl
	rule__DeleteStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getDeleteStatementAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__3__Impl
	rule__DeleteStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getEntityAssignment_3()); }
	(rule__DeleteStatement__EntityAssignment_3)
	{ after(grammarAccess.getDeleteStatementAccess().getEntityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getGroup_4()); }
	(rule__DeleteStatement__Group_4__0)?
	{ after(grammarAccess.getDeleteStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group_0__0__Impl
	rule__DeleteStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getCanKeyword_0_0()); }
	'can'
	{ after(grammarAccess.getDeleteStatementAccess().getCanKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group_0__1__Impl
	rule__DeleteStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getYouKeyword_0_1()); }
	'you'
	{ after(grammarAccess.getDeleteStatementAccess().getYouKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getPleaseKeyword_0_2()); }
	'please'
	{ after(grammarAccess.getDeleteStatementAccess().getPleaseKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group_4__0__Impl
	rule__DeleteStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getWhereKeyword_4_0()); }
	'where'
	{ after(grammarAccess.getDeleteStatementAccess().getWhereKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getConditionAssignment_4_1()); }
	(rule__DeleteStatement__ConditionAssignment_4_1)
	{ after(grammarAccess.getDeleteStatementAccess().getConditionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectList__Group__0__Impl
	rule__SelectList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectListAccess().getAlternatives_0()); }
	(rule__SelectList__Alternatives_0)?
	{ after(grammarAccess.getSelectListAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectList__Group__1__Impl
	rule__SelectList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectListAccess().getSelectItemAssignment_1()); }
	(rule__SelectList__SelectItemAssignment_1)
	{ after(grammarAccess.getSelectListAccess().getSelectItemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectListAccess().getGroup_2()); }
	(rule__SelectList__Group_2__0)*
	{ after(grammarAccess.getSelectListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectList__Group_2__0__Impl
	rule__SelectList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSelectListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectListAccess().getSelectItemAssignment_2_1()); }
	(rule__SelectList__SelectItemAssignment_2_1)
	{ after(grammarAccess.getSelectListAccess().getSelectItemAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group__0__Impl
	rule__PropertyReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getAlternatives_0()); }
	(rule__PropertyReference__Alternatives_0)?
	{ after(grammarAccess.getPropertyReferenceAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getPropertyAssignment_1()); }
	(rule__PropertyReference__PropertyAssignment_1)
	{ after(grammarAccess.getPropertyReferenceAccess().getPropertyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityName__Group__0__Impl
	rule__EntityName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityNameAccess().getAlternatives_0()); }
	(rule__EntityName__Alternatives_0)?
	{ after(grammarAccess.getEntityNameAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityNameAccess().getNameAssignment_1()); }
	(rule__EntityName__NameAssignment_1)
	{ after(grammarAccess.getEntityNameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyName__Group__0__Impl
	rule__PropertyName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyNameAccess().getAlternatives_0()); }
	(rule__PropertyName__Alternatives_0)?
	{ after(grammarAccess.getPropertyNameAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyNameAccess().getNameAssignment_1()); }
	(rule__PropertyName__NameAssignment_1)
	{ after(grammarAccess.getPropertyNameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateItem__Group__0__Impl
	rule__UpdateItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateItemAccess().getAlternatives_0()); }
	(rule__UpdateItem__Alternatives_0)?
	{ after(grammarAccess.getUpdateItemAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateItem__Group__1__Impl
	rule__UpdateItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateItemAccess().getPropertyAssignment_1()); }
	(rule__UpdateItem__PropertyAssignment_1)
	{ after(grammarAccess.getUpdateItemAccess().getPropertyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateItem__Group__2__Impl
	rule__UpdateItem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateItemAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getUpdateItemAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateItem__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateItemAccess().getValueAssignment_3()); }
	(rule__UpdateItem__ValueAssignment_3)
	{ after(grammarAccess.getUpdateItemAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getExpressionAssignment_0()); }
	(rule__Condition__ExpressionAssignment_0)
	{ after(grammarAccess.getConditionAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_1()); }
	(rule__Condition__Group_1__0)*
	{ after(grammarAccess.getConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLogicOperatorAssignment_1_0()); }
	(rule__Condition__LogicOperatorAssignment_1_0)
	{ after(grammarAccess.getConditionAccess().getLogicOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getExpressionAssignment_1_1()); }
	(rule__Condition__ExpressionAssignment_1_1)
	{ after(grammarAccess.getConditionAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAlternatives_0()); }
	(rule__Comparison__Alternatives_0)?
	{ after(grammarAccess.getComparisonAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
	rule__Comparison__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLeftHandSideAssignment_1()); }
	(rule__Comparison__LeftHandSideAssignment_1)
	{ after(grammarAccess.getComparisonAccess().getLeftHandSideAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__2__Impl
	rule__Comparison__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOperatorAssignment_2()); }
	(rule__Comparison__OperatorAssignment_2)
	{ after(grammarAccess.getComparisonAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightHandSideAssignment_3()); }
	(rule__Comparison__RightHandSideAssignment_3)
	{ after(grammarAccess.getComparisonAccess().getRightHandSideAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_1__0__Impl
	rule__ComparisonOperator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getIsKeyword_1_0()); }
	'is'
	{ after(grammarAccess.getComparisonOperatorAccess().getIsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_1__1__Impl
	rule__ComparisonOperator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getEqualKeyword_1_1()); }
	'equal'
	{ after(grammarAccess.getComparisonOperatorAccess().getEqualKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getToKeyword_1_2()); }
	'to'
	{ after(grammarAccess.getComparisonOperatorAccess().getToKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_2__0__Impl
	rule__ComparisonOperator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getIsKeyword_2_0()); }
	'is'
	{ after(grammarAccess.getComparisonOperatorAccess().getIsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_2__1__Impl
	rule__ComparisonOperator__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getNotKeyword_2_1()); }
	'not'
	{ after(grammarAccess.getComparisonOperatorAccess().getNotKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_2__2__Impl
	rule__ComparisonOperator__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getEqualKeyword_2_2()); }
	'equal'
	{ after(grammarAccess.getComparisonOperatorAccess().getEqualKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getToKeyword_2_3()); }
	'to'
	{ after(grammarAccess.getComparisonOperatorAccess().getToKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperator__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_3__0__Impl
	rule__ComparisonOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getLessKeyword_3_0()); }
	'less'
	{ after(grammarAccess.getComparisonOperatorAccess().getLessKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getThanKeyword_3_1()); }
	'than'
	{ after(grammarAccess.getComparisonOperatorAccess().getThanKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperator__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_4__0__Impl
	rule__ComparisonOperator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getGreaterKeyword_4_0()); }
	'greater'
	{ after(grammarAccess.getComparisonOperatorAccess().getGreaterKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getThanKeyword_4_1()); }
	'than'
	{ after(grammarAccess.getComparisonOperatorAccess().getThanKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperator__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_5__0__Impl
	rule__ComparisonOperator__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getLessKeyword_5_0()); }
	'less'
	{ after(grammarAccess.getComparisonOperatorAccess().getLessKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_5__1__Impl
	rule__ComparisonOperator__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getThanKeyword_5_1()); }
	'than'
	{ after(grammarAccess.getComparisonOperatorAccess().getThanKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_5__2__Impl
	rule__ComparisonOperator__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getOrKeyword_5_2()); }
	'or'
	{ after(grammarAccess.getComparisonOperatorAccess().getOrKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_5__3__Impl
	rule__ComparisonOperator__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getEqualKeyword_5_3()); }
	'equal'
	{ after(grammarAccess.getComparisonOperatorAccess().getEqualKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getToKeyword_5_4()); }
	'to'
	{ after(grammarAccess.getComparisonOperatorAccess().getToKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperator__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_6__0__Impl
	rule__ComparisonOperator__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getGreaterKeyword_6_0()); }
	'greater'
	{ after(grammarAccess.getComparisonOperatorAccess().getGreaterKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_6__1__Impl
	rule__ComparisonOperator__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getThanKeyword_6_1()); }
	'than'
	{ after(grammarAccess.getComparisonOperatorAccess().getThanKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_6__2__Impl
	rule__ComparisonOperator__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getOrKeyword_6_2()); }
	'or'
	{ after(grammarAccess.getComparisonOperatorAccess().getOrKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_6__3__Impl
	rule__ComparisonOperator__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getEqualKeyword_6_3()); }
	'equal'
	{ after(grammarAccess.getComparisonOperatorAccess().getEqualKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperator__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorAccess().getToKeyword_6_4()); }
	'to'
	{ after(grammarAccess.getComparisonOperatorAccess().getToKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AccountingSpeech__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccountingSpeechAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getAccountingSpeechAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__EntityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getEntityEntityNameParserRuleCall_3_0()); }
		ruleEntityName
		{ after(grammarAccess.getSelectStatementAccess().getEntityEntityNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__ConditionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getConditionConditionParserRuleCall_4_1_0()); }
		ruleCondition
		{ after(grammarAccess.getSelectStatementAccess().getConditionConditionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__GroupByListAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getGroupByListPropertyReferenceParserRuleCall_5_2_0()); }
		rulePropertyReference
		{ after(grammarAccess.getSelectStatementAccess().getGroupByListPropertyReferenceParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__GroupByListAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getGroupByListPropertyReferenceParserRuleCall_5_3_1_0()); }
		rulePropertyReference
		{ after(grammarAccess.getSelectStatementAccess().getGroupByListPropertyReferenceParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__EntityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertStatementAccess().getEntityEntityNameParserRuleCall_3_0()); }
		ruleEntityName
		{ after(grammarAccess.getInsertStatementAccess().getEntityEntityNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__PropertyListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertStatementAccess().getPropertyListPropertyNameParserRuleCall_5_0()); }
		rulePropertyName
		{ after(grammarAccess.getInsertStatementAccess().getPropertyListPropertyNameParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__PropertyListAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertStatementAccess().getPropertyListPropertyNameParserRuleCall_6_1_0()); }
		rulePropertyName
		{ after(grammarAccess.getInsertStatementAccess().getPropertyListPropertyNameParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ValueListAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertStatementAccess().getValueListValueParserRuleCall_10_0()); }
		ruleValue
		{ after(grammarAccess.getInsertStatementAccess().getValueListValueParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ValueListAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertStatementAccess().getValueListValueParserRuleCall_11_1_0()); }
		ruleValue
		{ after(grammarAccess.getInsertStatementAccess().getValueListValueParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__EntityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getEntityEntityNameParserRuleCall_2_0()); }
		ruleEntityName
		{ after(grammarAccess.getUpdateStatementAccess().getEntityEntityNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__UpdateItemAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getUpdateItemUpdateItemParserRuleCall_4_0_0()); }
		ruleUpdateItem
		{ after(grammarAccess.getUpdateStatementAccess().getUpdateItemUpdateItemParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__UpdateItemAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getUpdateItemUpdateItemParserRuleCall_4_1_1_0()); }
		ruleUpdateItem
		{ after(grammarAccess.getUpdateStatementAccess().getUpdateItemUpdateItemParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__ConditionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getConditionConditionParserRuleCall_5_1_0()); }
		ruleCondition
		{ after(grammarAccess.getUpdateStatementAccess().getConditionConditionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__EntityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getEntityEntityNameParserRuleCall_3_0()); }
		ruleEntityName
		{ after(grammarAccess.getDeleteStatementAccess().getEntityEntityNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__ConditionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getConditionConditionParserRuleCall_4_1_0()); }
		ruleCondition
		{ after(grammarAccess.getDeleteStatementAccess().getConditionConditionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__SelectItemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectListAccess().getSelectItemPropertyReferenceParserRuleCall_1_0()); }
		rulePropertyReference
		{ after(grammarAccess.getSelectListAccess().getSelectItemPropertyReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectList__SelectItemAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectListAccess().getSelectItemPropertyReferenceParserRuleCall_2_1_0()); }
		rulePropertyReference
		{ after(grammarAccess.getSelectListAccess().getSelectItemPropertyReferenceParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__PropertyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityName__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityNameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityNameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyNameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyNameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__PropertyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateItemAccess().getPropertyPropertyCrossReference_1_0()); }
		(
			{ before(grammarAccess.getUpdateItemAccess().getPropertyPropertyIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUpdateItemAccess().getPropertyPropertyIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getUpdateItemAccess().getPropertyPropertyCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateItem__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateItemAccess().getValueValueParserRuleCall_3_0()); }
		ruleValue
		{ after(grammarAccess.getUpdateItemAccess().getValueValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionComparisonParserRuleCall_0_0()); }
		ruleComparison
		{ after(grammarAccess.getConditionAccess().getExpressionComparisonParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__LogicOperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getLogicOperatorLogicOperatorParserRuleCall_1_0_0()); }
		ruleLogicOperator
		{ after(grammarAccess.getConditionAccess().getLogicOperatorLogicOperatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionComparisonParserRuleCall_1_1_0()); }
		ruleComparison
		{ after(grammarAccess.getConditionAccess().getExpressionComparisonParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__LeftHandSideAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getLeftHandSidePropertyCrossReference_1_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getLeftHandSidePropertyIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComparisonAccess().getLeftHandSidePropertyIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getComparisonAccess().getLeftHandSidePropertyCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOperatorComparisonOperatorParserRuleCall_2_0()); }
		ruleComparisonOperator
		{ after(grammarAccess.getComparisonAccess().getOperatorComparisonOperatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightHandSideAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightHandSideValueParserRuleCall_3_0()); }
		ruleValue
		{ after(grammarAccess.getComparisonAccess().getRightHandSideValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
